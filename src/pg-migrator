#!/usr/bin/env node

"use strict";

var fs = require("fs");
var path = require("path");
var colors = require("colors");
var pg = require("pg");
var _ = require("underscore");
var MigratiorService = require("./application/service/migrator-service");
var ScriptService = require("./domain/service/script-service");
var VersionService = require("./domain/service/version-service");
var ScriptRepository = require("./domain/repository/script-repository");
var VersionRepository = require("./domain/repository/version-repository");
var messages = require("./infrastructure/messages");

colors.setTheme({
    verbose: 'cyan',
    info: 'green',
    warn: 'yellow',
    error: 'red'
});

var args = process.argv.slice(2);

var targetVersion = 0;

if (args.length == 0) {

    console.log(messages.CONNECTION_STRING_MUST_BE_PROVIDED.error);

    process.exit(1);
}

var connectionString = args[0];

if (args.length > 1) {

    if (isNaN(args[1])) {

        console.log(messages.INVALID_TARGET_VERSION.error);

        process.exit(1);
    }

    targetVersion = args[1];
}

var persister = new pg.Client(connectionString);

persister.connect(function (err) {

    if (err) {
        console.error((messages.CONNECTION_ERROR + err).error);

        process.exit(1);
    }

    persister.query("BEGIN", function (err) {

        if (err) {
            console.log(err);

            process.exit(1);
        }

        var migratiorService = new MigratiorService(
            new ScriptService(new ScriptRepository(fs, persister), path),
            new VersionService(new VersionRepository(persister), messages),
            messages,
            _);

        migratiorService.migrate(__dirname, targetVersion, function (currentVersion) {

            persister.query('COMMIT', function () {

                persister.end();

                console.log("--------------------------------------------------".grey);
                console.log((messages.MIGRATION_COMPLETED + currentVersion).info);

                process.exit(0);
            });

        }, function (err) {

            persister.query('ROLLBACK', function () {

                persister.end();

                if (err) {
                    console.log(err);
                }

                process.exit(1);
            });
        });
    });
});